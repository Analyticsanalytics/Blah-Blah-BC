
## Note: It's incomplete as of now.
http://www.statisticssolutions.com/factor-analysis-sem-exploratory-factor-analysis/

df = read.csv("C:\\Users\\sohail.ahmad\\Documents\\tata_final.csv")
str(df)
names(df)

#Taking the subset of numerical values for analysis
df1 = df[,146:172]
summary(df1)


#Show only columns which have one or more missing values
M = sapply(df1, function(x) sum(is.na(x)))
sort(M[M>0], decreasing=TRUE) #Sorting in descending order


cor(df1)
library(psych)

fit = factanal(df1, factors = 2, rotation = "varimax", scores="regression")
print(fit) 
#Since p-value is zero (level of significance),it indicates that the hypothesis of perfect model fit is rejected. 


#We consider all the components who values is 1 or greater than 1. We'll take 5 factors in this case
#eigen values explains the variance in the dataset
ev = eigen(cor(df1)) 
ev$values


# factanal fn performs maximum-likelihood factor analysis on a covariance matrix or data matrix
#The rotation= options include "varimax", "promax", and "none". Add the option scores="regression" or 
#"Bartlett" to produce factor scores.
fit1 = factanal(df1, factors = 5, rotation = "varimax", scores="regression")
colnames(fit1$loadings) = c("Fac_1","Fac_2","Fac_3","Fac_4","Fac_5")
print(loadings(fit1), digits=2, cutoff=.2, sort=TRUE) 

df2 = (df1, fit1$scores)

#Component Matrix & Rotated Matrix

# Getting correlation matrix
corMat = cor(df1)
print(corMat)

library(GPArotation)
solution = fa(r = corMat, nfactors = 5, rotate = "oblimin", fm = "pa")
print(solution)
