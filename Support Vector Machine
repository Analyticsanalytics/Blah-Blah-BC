Some terms in implementation of SVM in R/Python
Gamma: It’s a coefficient. It’s Kernel coefficient for ‘rbf’, ‘poly’ and ‘sigmoid’. Higher the value of gamma, will try to exact fit the
       as per training data set i.e. generalization error and cause over-fitting problem.The process of choosing SVM parameters
       e (epsilon) & C (tuning parameter) is called Hyperparameter Optimization or Model Selection.
The argument scale=FALSE tells the svm() function not to scale each feature to have mean zero or standard deviation one; depending on
       the application, one might prefer to use scale=TRUE.
Kernel = “linear” is used for Support Vector Classifier. Kernel = “radial” is used for SVM.


rm(list = ls())
setwd("C:\\Users\\sohail.ahmad\\Desktop\\Sit Visits Data\\Data")

train = read.csv("train.csv")
test = read.csv("test.csv")
names(train)

train = train[, -c(1,4,5)]
test = test[, -c(1,4,5)]

#We need to convert response to factor for SV classfication
train$Delinquent = as.factor(train$Delinquent)
test$Delinquent = as.factor(test$Delinquent)


library(e1071)
svmfit=svm(Delinquent~., data=train, kernel="radial",gamma=1,cost=1000)
summary(svmfit)
svmfit$index  # Support vectors

Pred1 = predict(svmfit, newdata = test)
table(Pred1, test$Delinquent)

#tune.out gives the best values of cost & gamma. Best performance is 0.063 with cost 0.1 and gamma=0.5
set.seed(1)
tune.out=tune(svm, Delinquent~., data=train, kernel="radial", ranges=list(cost=c(0.1,1,10,100,1000),gamma=c(0.5,1,2,3,4)))
print(tune.out)


##### Now let's make the model with the best cost and gamma

svmTune = svm(Delinquent~., data=train, kernel="radial",gamma=0.5,cost=0.1)
Tunepred = predict(svmTune, newdata=test)
table(predicted= Tunepred, True=test$Delinquent)
table(test$Delinquent)
